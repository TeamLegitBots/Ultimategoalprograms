package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.robot.Robot;
import com.qualcomm.robotcore.util.Hardware;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.HardwareMap;



@TeleOp(name = "MyTeleop")
//@Disabled
public class TeleopV1 extends LinearOpMode {

    Hardwaremap robot = new Hardwaremap();



    @Override
    public void runOpMode() throws InterruptedException {


        robot.init(hardwareMap);
        robot.WheelOutake.setMode(DcMotor.RunMode.RUN_USING_ENCODERS);

        double sensitivity = 2;

        waitForStart();


        while (opModeIsActive()) {

            // Code for the four drive motors
            float drive = gamepad1.right_stick_x;
            float strafe = -gamepad1.left_stick_x;
            float turn = gamepad1.left_stick_y;

            float intake = gamepad2.right_stick_x;
            float wheelouttake = gamepad2.right_stick_y;
            float outtake = gamepad2.left_stick_y;


            float FR = -drive + turn - strafe;
            float FL = drive + turn  + strafe;
            float BR = -drive + turn + strafe;
            float BL = drive + turn - strafe;
            
            
            
            
            robot.Intake.setPower(-intake);
            //robot.WheelOutake.setPower(0.80 * (outtake));
            
            robot.Pulley.setPower(0.8 * intake);
            robot.FrontRight.setPower(sensitivity * FR);
            
            robot.FrontLeft.setPower(sensitivity * FL );
            robot.BackRight.setPower(sensitivity * BR);
            robot.BackLeft.setPower(sensitivity * BL);

            if (outtake<-.1){
                robot.WheelOutake.setPower(.53);
            } else{
                robot.WheelOutake.setPower(0);

            }
            
            if (outtake<-.1 && intake>.1){
                robot.Ring_gate.setPosition(.5);
            } else{
                robot.Ring_gate.setPosition(1);

            }

            }



        
          double intakepower = 0;
          
          intakepower = gamepad2.left_trigger;
          robot.Pulley.setPower(intakepower);

           
            // Drag the sparkmini system down
            

            // Stop if not linear motion kit input
            if(gamepad1.left_trigger == 0 && gamepad1.right_trigger == 0) {


            }

            // Stop if no inputs have been recoded
            if (gamepad1.left_stick_y == 0 && gamepad1.left_stick_x == 0 && gamepad1.right_stick_x == 0) {

                robot.stop();
            }

            if (gamepad1.b && sensitivity > 0.2){
                sensitivity = sensitivity - 0.1;

                sleep(500);
            }

            if (gamepad1.x && sensitivity < 0.9){
                sensitivity = sensitivity + 0.1;

                sleep(500);

            }

        }


    }

